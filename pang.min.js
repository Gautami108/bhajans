angular.module("pang",[]).factory("pang",function($rootScope){var addParseObject=function(object,className,options){var klass=Parse.Object.extend(className);var parseObject=new klass;for(attrKey in object)parseObject.set(attrKey,object[attrKey]);if(options&&options.acl!=null)parseObject.setACL(options.acl);parseObject.save(null,{success:function(parseObject){object.parseObjectId=parseObject.id;acl=parseObject.getACL();if(acl!=null){userPermissions=null;if(Parse.User.current())userPermissions=acl.permissionsById[Parse.User.current().id];
    publicPermissions=acl.permissionsById["*"];object.canWrite=userPermissions&&userPermissions.write==true||publicPermissions&&publicPermissions.write==true}else object.canWrite=true;object.updatedAt=parseObject.updatedAt.toISOString();if(options&&options.success)options.success(parseObject)},error:function(error){if(options&&options.error)options.error(error)}})};var deleteParseObject=function(object,className,options){var query=new Parse.Query(className);query.get(object.parseObjectId,{success:function(parseObject){parseObject.destroy({success:function(){if(options&&
    options.success)options.success(parseObject)},error:function(error){if(options&&options.error)options.error(error)}})},error:function(error){if(options&&options.error)options.error(error)}})};var updateParseObject=function(object,className,options){var query=new Parse.Query(className);query.get(object.parseObjectId,{success:function(parseObject){for(attrKey in object)if(parseObject.get(attrKey))parseObject.set(attrKey,object[attrKey]);parseObject.save({success:function(parseObject){object.updatedAt=
    parseObject.updatedAt.toISOString();if(options&&options.success)options.success(parseObject)},error:function(error){if(options&&options.error)options.error(error)}})},error:function(error){if(options&&options.error)options.error(error)}})};var recollect=function(){for(var i=0;i<$rootScope.collections.length;i++)$rootScope.collections[i].fetch()};return{initialize:function(appId,jsKey){Parse.initialize(appId,jsKey);$rootScope.collections=[]},User:{logIn:function(username,password,promise){Parse.User.logIn(username,
    password,{success:function(user){recollect();if(promise&&promise.success)promise.success(user)},error:function(error){if(promise&&promise.error)promise.error(error)}})},logOut:function(){Parse.User.logOut();recollect()}},Collection:function(className,promise){var pangCollection=[];$rootScope.collections.push(pangCollection);pangCollection.className=className;pangCollection.queryMatches={};pangCollection.orders={};pangCollection.autoSync=false;pangCollection.where=function(attr){for(key in attr)pangCollection.queryMatches[key]=
    attr[key];return pangCollection};pangCollection.order=function(key,direction){pangCollection.orders[key]=direction!=null?direction:true;return pangCollection};pangCollection.setAutoSync=function(val){pangCollection.autoSync=val;return pangCollection};pangCollection.build=function(promise){var query=new Parse.Query(pangCollection.className);for(match in pangCollection.queryMatches)query.equalTo(match,pangCollection.queryMatches[match]);for(key in pangCollection.orders)if(pangCollection.orders[key]==
    true)query.addAscending(key);else query.addDescending(key);var CollectionClass=Parse.Collection.extend({model:pangCollection.className,query:query});pangCollection.collection=new CollectionClass;pangCollection.fetch({success:function(objects){if(promise&&promise.success)promise.success(objects)},error:function(error){if(promise&&promise.error)promise.error(error)}});return pangCollection};pangCollection.fetch=function(){pangCollection.collection.fetch({success:function(coll){var size=pangCollection.length;
    for(var i=size;i>0;i--)pangCollection.splice(i-1,1);for(var i=0;i<coll.length;i++){var object={};for(attrKey in coll.at(i).attributes)object[attrKey]=coll.at(i).get(attrKey);object.parseObjectId=coll.at(i).id;acl=coll.at(i).getACL();if(acl!=null){userPermissions=null;if(Parse.User.current())userPermissions=acl.permissionsById[Parse.User.current().id];publicPermissions=acl.permissionsById["*"];object.canWrite=userPermissions&&userPermissions.write==true||publicPermissions&&publicPermissions.write==
        true}else object.canWrite=true;object.updatedAt=coll.at(i).updatedAt.toISOString();pangCollection[i]=object}$rootScope.$apply()}});return pangCollection};pangCollection.add=function(attr,options){newOptions={};for(key in options)if(key!="success")newOptions[key]=options[key];newOptions.success=function(object){pangCollection.reorder();if(options&&options.success)options.success(object);$rootScope.$apply()};pangCollection.push(attr);addParseObject(pangCollection[pangCollection.length-1],pangCollection.className,
    newOptions);return pangCollection};pangCollection["delete"]=function(index,options){newOptions={};for(key in options)if(key!="success")newOptions[key]=options[key];newOptions.success=function(object){pangCollection.reorder();if(options&&options.success)options.success(object);$rootScope.$apply()};var oldObject=pangCollection[index];pangCollection.splice(index,1);deleteParseObject(oldObject,pangCollection.className,newOptions);return pangCollection};pangCollection.update=function(object,options){newOptions=
{};for(key in options)if(key!="success")newOptions[key]=options[key];newOptions.success=function(object){pangCollection.reorder();if(options&&options.success)options.success(object);$rootScope.$apply()};updateParseObject(object,pangCollection.className,newOptions);return pangCollection};pangCollection.reorder=function(){pangCollection.sort(function(a,b){for(key in pangCollection.orders)if(a[key]!=b[key]){if(a[key]==null)return-1;else if(b[key]==null)return 1;if(pangCollection.orders[key]==true)return b[key]>
    a[key]?-1:1;else return b[key]>a[key]?1:-1}return 0})};$rootScope.$watch("collections[collections.length-1]",function(newValue,oldValue){if(pangCollection.autoSync)if(newValue.length>oldValue.length)for(var i=0;i<pangCollection.length;i++){if(pangCollection[i].parseObjectId==null)addParseObject(pangCollection[i],pangCollection.className)}else if(newValue.length<oldValue.length)for(var i=0;i<oldValue.length;i++){var obj=oldValue[i];var shouldDelete=true;if(obj.parseObjectId==null)continue;for(var j=
    0;j<newValue.length;j++)if(newValue[j].parseObjectId==obj.parseObjectId){shouldDelete=false;continue}if(shouldDelete)deleteParseObject(obj,pangCollection.className)}else{console.log("changed");for(var i=0;i<oldValue.length;i++)if(angular.equals(oldValue[i],newValue[i])==false)updateParseObject(newValue[i],pangCollection.className)}},true);return pangCollection}}});
